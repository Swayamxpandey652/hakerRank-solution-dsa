You are given the pointer to the head node of a sorted linked list, where the data in the nodes is in ascending order. Delete nodes and return a sorted list with each distinct value in the original list. The given head pointer may be null indicating that the list is empty.
*************************************************************************************************************************

SinglyLinkedListNode* removeDuplicates(SinglyLinkedListNode* llist) {
    SinglyLinkedListNode* current = llist;
    SinglyLinkedListNode* prev = nullptr;
    std::unordered_set<int> seen_value;
    while(current != nullptr){
        if(seen_value.find(current->data) != seen_value.end()){
            prev->next = current->next;
            delete current;
            current = prev->next;
        }else{
            seen_value.insert(current->data);
            prev = current;
            current = current->next;
        }
    }
    return llist;
}
